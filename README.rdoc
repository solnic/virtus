IF YOU'RE LOOKING AT THIS PAGE, YOU SHOULD GO TO solnic/virtus INSTEAD.
THIS IS JUST A PERSONAL CLONE OF THE ORIGINAL.

= Virtus http://travis-ci.org/solnic/virtus.png

This is a partial extraction of the DataMapper Property API with various
modifications. My goal is to provide a common API to define attributes on a
model along with (auto-)validations so all ORMs/ODMs could use it instead of
reinventing the wheel all over again. It would be also suitable for any other
usecase where you need to extend your ruby objects with various attributes that
require typecasting and/or validations.

== Installation

  gem i virtus

== Basic Usage

  require 'virtus'

  class User
    include Virtus

    attribute :name,     String
    attribute :age,      Integer
    attribute :birthday, DateTime
  end

  # adds attributes setting in the constructor
  user = User.new(:age => 28)

  # attribute writer
  user.name = "Piotr"

  # attribute reader
  user.name # => "Piotr"

  # hash of attribute values
  user.attributes # => { :name => "Piotr" }

  # automatic typecasting
  user.age = '28'
  user.age # => 28

  user.birthday = 'November 18th, 1983'
  user.birthday # => #<DateTime: 1983-11-18T00:00:00+00:00 (4891313/2,0/1,2299161)>

  # define your own attribute classes
  require 'json'

  module MyApp
    module Attributes
      class JSON < Virtus::Attributes::Object
        primitive Hash

        def typecast(value, model = nil)
          ::JSON.parse(value)
        end
      end
    end

    class User
      include Virtus

      attribute :info, Attributes::JSON
    end
  end

  user = MyApp::User.new

  user.info = '{"email" : "john@domain.com" }'
  user.info # => {"email"=>"john@domain.com"}

== Dirty Tracking

Dirty tracking is optional. If you need it, just include Virtus::DirtyTracking
in you class.

  class Post
    include Virtus
    include Virtus::DirtyTracking

    attribute  :title,   String
    attribute, :content, String
    attribute, :meta,    Hash
  end

  post = Post.new(:title => 'Foo', :meta => { :tags => ['red', 'green'] })

  post.title = 'Bar'

  post.dirty? # => true

  post.attribute_dirty?(:title) # => true

  post.meta[:tags] << 'blue'

  post.attribute_dirty?(:meta) # => true

  post.dirty_attributes # => {:title => 'Bar', :meta=>{:tags=>["red", "green", "blue"]}}


== Validations

Coming soon...:)

== TODO

* validations
* ActiveModel compliance
* I18n

== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2011 Piotr Solnica. See LICENSE for details.
